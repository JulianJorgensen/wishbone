{"version":3,"sources":["containers/Header.jsx","containers/Footer.jsx","containers/Cart-item.jsx","containers/Cart.jsx","containers/Main.jsx","containers/InstagramFeed/index.jsx","presentational/Loader.js","containers/Collection/Products.jsx","containers/CollectionItem.jsx","containers/Index.jsx","containers/Collections.jsx","containers/Collection/Options.jsx","containers/Collection/Emblems.jsx","containers/Collection/Sizes.jsx","containers/Collection/Charity.jsx","containers/Collection/Index.jsx","presentational/Login.jsx","containers/NewsItem.jsx","containers/PageItem.jsx","router/router.jsx","index.jsx","utils/utils.jsx","actions/collectionActions.jsx","actions/cartActions.jsx","reducers/reducers.jsx","store/configureStore.jsx","actions/productActions.jsx","api/shopifyAPI.jsx"],"names":["connect","require","cartActions","Header","state","navActive","handleNavToggle","bind","closeNav","this","setState","props","dispatch","navItems","cartItems","className","onClick","to","activeClassName","openCart","id","src","React","Component","cart","lineItemsCount","Footer","setTimeout","bodyHtml","shopifyAPI","getPage","body_html","aboutContent","dangerouslySetInnerHTML","__html","href","target","actions","CartItem","item","quantity","incrementLineItem","changeQuantity","startAddorUpdateCartItem","parseInt","style","backgroundImage","imageVariants","variant_title","title","type","value","min","readOnly","renderQuantity","utils","formatAsMoney","price","Cart","closeCart","emptyCart","window","open","checkoutUrl","clearCart","isOpen","lineItems","subtotal","lineItemCount","handleCloseCart","length","map","lineItem","key","renderLineItems","handleClearCart","name","handleCheckout","Main","content","meta","description","charset","auto","ograph","pageName","location","pathname","substr","split","children","InstagramFeed","Loader","collectionActions","Products","products","activeProductIndex","collectionId","collections","activeCollection","showHeadline","searchObjects","all","getCurrentCollection","activeProduct","index","error","product","slice","data-tip","replace","toLowerCase","productIsSelected","event","updatedActiveProduct","selected","handleOptionChange","changeActiveProduct","browserHistory","push","handleProductChange","active","CollectionItem","image","matchedCollection","selectedVariant","getProductPrice","Index","aria-hidden","collection","addToCart","handleAddToCart","attrs","collection_id","Collections","Options","options","option","console","log","onChange","optionName","filter","values","Emblems","Sizes","optionsIndex","Charity","modalIsOpen","charities","openModal","closeModal","getCharities","then","activeCharity","ReactTooltip","rebuild","charity","association","optionValues","setCharity","Collection","dataFetched","imageStatus","productSelected","emblemSelected","charitySelected","showError","handleEmblemChange","handleCharityChange","params","activateCollection","data","setActiveCollection","clearActiveCollection","optionSelected","changeProduct","selectedVariantImage","renderDescription","trigger","transitionTime","variants","onLoad","handleImageLoaded","onError","handleImageErrored","multiline","Login","placeholder","NewsItem","axios","get","blog_id","post_id","postId","response","catch","PageItem","newProps","setPageContent","fetchPageContent","configure","listen","ReactGA","set","page","pageview","logPageView","scrollTo","history","path","component","productActions","store","subscribe","getState","startAddProducts","startAddCollections","createCart","localCart","ReactDOM","render","router","document","getElementById","module","exports","amount","currency","thousandSeparator","decimalSeparator","localeDecimalSeparator","regex","RegExp","parseFloat","toFixed","toString","nameKey","prop","arr","i","Promise","resolve","reject","buyClient","fetchAllCollections","parsedCollections","parseCollectionsPromises","fetchQueryProducts","sort_by","sort","a","b","keyA","keyB","addCollections","isSelected","productVariant","cartLineItem","findCartItemByVariantId","variant_id","variantId","updateCartItem","updateCartSubtotal","updateCartItemsCount","selectedCharity","clearCharitiesFromCart","charitiesInCart","undefined","createLineItemsFromVariants","variant","updatedCart","updatedCartItems","errors","clearLineItems","newSubtotal","updatedCartItemsCount","selectedCartItem","remove","updatedQuantity","forEach","cartItem","updatedCartItem","updateLineItem","productsReducer","action","fetched","collectionsReducer","cartReducer","navReducer","showClose","showNav","initialState","reducer","redux","nav","thunk","devToolsExtension","f","fetchAllProducts","parsedProducts","updatedProduct","addProducts","preloadProductImages","images","Image","setActiveProduct","clearActiveProduct","updateActiveProductOptions","ShopifyBuy","buildClient","apiKey","domain","appId","pages","matchedPage","handle","fetchCollectionPromise","fetchCollection","parsedCollection","fetchProductsPromise","reason","tag","newCart","localStorage","setItem","fetchCart","getItem","remoteCart"],"mappings":"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","file":"static/js/main.b043238c.chunk.js","sourcesContent":["import React from 'react';\nimport {Link, IndexLink} from 'react-router';\nlet {connect} = require('react-redux');\nlet cartActions = require('actions/cartActions');\n\nclass Header extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {\n      navActive: false\n    }\n\n    this.handleNavToggle = this.handleNavToggle.bind(this);\n    this.closeNav = this.closeNav.bind(this);\n  }\n\n  handleNavToggle(){\n    this.setState({\n      navActive: !this.state.navActive\n    });\n  }\n\n  closeNav(){\n    this.setState({\n      navActive: false\n    });\n  }\n\n  render() {\n    let {dispatch, cartItems} = this.props;\n\n    let navItems = () => {\n      return (\n        <div>\n          <li className=\"site-nav-item\"><IndexLink onClick={this.closeNav} to=\"/\" activeClassName=\"active\">Home</IndexLink></li>\n          <li className=\"site-nav-item\"><Link onClick={this.closeNav} to=\"/hats\" activeClassName=\"active\">Hats</Link></li>\n          <li className=\"site-nav-item\"><Link onClick={this.closeNav} to=\"/about\" activeClassName=\"active\">About</Link></li>\n          <li className=\"site-nav-item\"><Link onClick={this.closeNav} to=\"/contact\" activeClassName=\"active\">Contact</Link></li>\n          <li className=\"site-nav-item\"><Link onClick={()=>{\n            this.closeNav();\n            dispatch(cartActions.openCart());\n          }}>Cart</Link></li>\n        </div>\n      )\n    }\n\n    return (\n      <div id=\"site-header-wrapper\">\n        <div className=\"container\">\n          <header id=\"site-header\">\n            <div id=\"site-logo\">\n              <IndexLink to=\"/\" activeClassName=\"active\"><img src=\"/images/logo.png\" /></IndexLink>\n            </div>\n\n            <nav id=\"site-nav\" className=\"show-for-large\">\n              {navItems()}\n            </nav>\n\n            <div className=\"mobile-nav-icon\"><i onClick={this.handleNavToggle} className={`fa ${this.state.navActive ? 'fa-times' : 'fa-bars'}`} /></div>\n            <nav id=\"mobile-nav\" className=\"hide-for-large\">\n              {this.state.navActive ? navItems() : ''}\n            </nav>\n          </header>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      cartItems: state.cart.lineItemsCount\n    }\n  }\n)(Header);\n","import React from 'react';\nimport shopifyAPI from 'api/shopifyAPI';\nimport { Link, IndexLink } from 'react-router';\n\nexport default class Footer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {}\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      var bodyHtml = shopifyAPI.getPage('footer-about').body_html;\n      this.setState({\n        aboutContent: bodyHtml,\n      });\n    }, 2000);\n  }\n\n  render() {\n    return (\n      <footer id=\"site-footer\">\n        <div className=\"footer-wishbone\"><img src=\"/images/wishbone-footer.png\" /></div>\n        <nav className=\"footer-nav\">\n          <div className=\"row\">\n            <div className=\"footer-column\">\n              <div className=\"footer-nav-headline\">WISHBONE</div>\n              <ul>\n                <li><IndexLink to=\"/\" activeClassName=\"active\">Home</IndexLink></li>\n                <li><Link to=\"/hats\" activeClassName=\"active\">Hats</Link></li>\n                <li><Link to=\"/about\" activeClassName=\"active\">About</Link></li>\n                <li><Link to=\"/contact\" activeClassName=\"active\">Contact</Link></li>\n              </ul>\n            </div>\n\n            <div className=\"footer-column\">\n              <div className=\"footer-nav-headline\">About Wishbone Hats</div>\n              <div className=\"body\" dangerouslySetInnerHTML={{__html: this.state.aboutContent}}></div>\n            </div>\n\n            <div className=\"footer-column\" id=\"footer-socialmedia\">\n              <div className=\"footer-nav-headline\">Social Media</div>\n              <a href=\"https://www.instagram.com/wishbonehats/\" target=\"_new\"><i className=\"fa fa-instagram\" /></a>\n              <a href=\"https://www.facebook.com/WishboneHats-247362542342002/\" target=\"_new\"><i className=\"fa fa-facebook-square\" /></a>\n              <a href=\"https://www.pinterest.com/wishbonehats/\" target=\"_new\"><i className=\"fa fa-pinterest\" /></a>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"footer-copyright\">&copy; WISHBONE HATS 2017</div>\n        <ul className=\"footer-payment\">\n          <li><i className=\"fa fa-cc-amex\"></i></li>\n          <li><i className=\"fa fa-cc-jcb\"></i></li>\n          <li><i className=\"fa fa-cc-diners-club\"></i></li>\n          <li><i className=\"fa fa-cc-discover\"></i></li>\n          <li><i className=\"fa fa-cc-paypal\"></i></li>\n          <li><i className=\"fa fa-cc-mastercard\"></i></li>\n          <li><i className=\"fa fa-cc-visa\"></i></li>\n        </ul>\n      </footer>\n    )\n  }\n}\n","import React from 'react';\nimport utils from 'utils/utils';\nlet { connect } = require('react-redux');\nlet actions = require('actions/cartActions');\n\nclass CartItem extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    let { dispatch, item, incrementLineItem, quantity } = this.props;\n\n    let changeQuantity = (quantity) => {\n      // console.log('cart Item object: ', item);\n      dispatch(actions.startAddorUpdateCartItem(item, parseInt(quantity)));\n    }\n\n    let renderQuantity = () => {\n      if (item.title != 'Charities') {\n        return (\n          <div className=\"cart-item__quantity-container\">\n            <button\n              className=\"btn--seamless quantity-decrement\"\n              type=\"button\"\n              onClick={() => {changeQuantity(-1)}}\n            ><span>-</span><span className=\"hide\">Decrement</span></button>\n            <input\n              value={quantity}\n              className=\"cart-item__quantity\"\n              type=\"number\"\n              min=\"0\"\n              readOnly\n            />\n            <button\n              className=\"btn--seamless quantity-increment\"\n              type=\"button\"\n              onClick={() => {changeQuantity(1)}}\n            ><span>+</span><span className=\"hide\">Increment</span></button>\n          </div>\n        )\n      }\n    }\n\n    return (\n      <div className=\"cart-item\">\n        <div className=\"cart-item__img\" style={{backgroundImage: 'url(' + item.imageVariants[2].src + ')'}}></div>\n        <div className=\"cart-item__content\">\n          <div className=\"cart-item__content-row\">\n            <div className=\"cart-item__variant-title\">{item.variant_title}</div>\n            <span className=\"cart-item__title\">{item.title}</span>\n          </div>\n          <div className=\"cart-item__content-row\">\n            {item.title !== 'Charity' ? renderQuantity() : ''}\n            <span className=\"cart-item__price\">{item.title != 'Charity' ? utils.formatAsMoney(item.price*quantity) : ''}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default connect(\n  (state) => {\n    return {\n      cart: state.cart\n    }\n  }\n)(CartItem);\n","import React from 'react';\nimport shopifyAPI from 'api/shopifyAPI';\nimport CartItem from 'containers/Cart-item';\n\nimport utils from 'utils/utils';\n\nlet { connect } = require('react-redux');\nlet actions = require('actions/cartActions');\n\nclass Cart extends React.Component {\n  constructor() {\n    super();\n\n    let dispatch;\n  }\n\n  componentWillMount() {\n    this.dispatch = this.props.dispatch;\n  }\n\n  handleCloseCart() {\n    this.dispatch(actions.closeCart());\n  }\n\n  handleCheckout() {\n    this.dispatch(actions.emptyCart());\n    window.open(shopifyAPI.cart.checkoutUrl, '_self');\n  }\n\n  handleClearCart() {\n    this.dispatch(actions.clearCart());\n  }\n\n  render() {\n    let { isOpen, lineItems, lineItemCount, subtotal } = this.props.cart;\n    let renderLineItems = () => {\n      if (lineItems.length > 0) {\n        return lineItems.map(lineItem => {\n          return <CartItem\n            key={lineItem.id}\n            item={lineItem}\n            quantity={lineItem.quantity}\n          />\n        });\n      }\n    };\n\n    return (\n      <div className={\"cart \" + (isOpen ? 'js-active' : '' )}>\n        <div className=\"cart-section cart-section--top\">\n          <h2 className=\"cart-title\">Your cart: {isOpen}</h2>\n          <button className=\"btn--close\">\n            <div onClick={this.handleCloseCart.bind(this)}>×</div>\n            <span className=\"hide\">Close</span>\n          </button>\n        </div>\n\n        <div className=\"cart-form\">\n          <div className=\"cart-item-container cart-section\">\n            <div>\n              {renderLineItems()}\n            </div>\n            <div>\n              <button onClick={() => this.handleClearCart()} className=\"btn btn_clear\">Clear</button>;\n            </div>\n          </div>\n\n          <div className=\"cart-bottom\">\n            <div className=\"cart-info clearfix cart-section\">\n              <div className=\"type--caps cart-info__total cart-info__small\">Total</div>\n              <div className=\"cart-info__pricing\">\n                <span className=\"cart-info__small cart-info__total\">USD</span>\n                <span className=\"pricing pricing--no-padding\">{utils.formatAsMoney(subtotal)}</span>\n              </div>\n            </div>\n            <div className=\"cart-actions-container cart-section type--center\">\n              <div className=\"cart-discount-notice cart-info__small\">Shipping and discount codes are added at checkout.</div>\n              <input\n                type=\"submit\"\n                className=\"btn btn--cart-checkout\"\n                id=\"checkout\"\n                name=\"checkout\"\n                value=\"Checkout\"\n                onClick={() => this.handleCheckout()}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      cart: state.cart\n    }\n  }\n)(Cart);\n","import React from 'react';\nimport DocumentMeta from 'react-document-meta';\nimport Header from 'containers/Header';\nimport Footer from 'containers/Footer';\nimport Cart from 'containers/Cart';\n\nexport default class Main extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      title: '',\n      content: ''\n    };\n  }\n\n  render() {\n    const meta = {\n      title: 'Wishbone Hats',\n      description: 'Wishbone Hats',\n      meta: {\n        charset: 'utf-8'\n      },\n      auto: {\n        ograph: true\n      }\n    };\n\n    let pageName = this.props.location.pathname.substr(1).split('/');\n\n    return (\n      <div id=\"main\" className={`page-${pageName[0] ? pageName[0] + ' subpage' : 'home'}`}>\n        <DocumentMeta {...meta} />\n        <Header />\n        <div id=\"main-container\">\n          <Cart />\n          {this.props.children}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Instafeed from 'react-instafeed';\n\nexport default class InstagramFeed extends React.Component {\n  render() {\n    return (\n      <div>\n        <h3 className=\"section-header\">Instagram</h3>\n        <div className=\"instagram-feed\" id='instafeed'>\n          {/* <Instafeed\n            limit='12'\n            target='instafeed'\n            resolution='standard_resolution'\n            sortBy='most-recent'\n            template={`<div class=\"instagram-feed-item\" style=\"background-image: url({{image}});\"><a class=\"insta-link\" href={{link}} target=\"_new\"></a></div>`}\n            userId='4609619593'\n            clientId='52ffc56115e543cf8e31af1cb89af8a5'\n            accessToken='4609619593.52ffc56.3bd94d759d2a4fbf913c1fc68a52c300'\n          /> */}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default function Loader(props){\n  return <div className=\"loader\"><i className=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"></i></div>\n}\n","import React from 'react';\nimport {Link, IndexLink, browserHistory} from 'react-router';\nimport shopifyAPI from 'api/shopifyAPI';\nimport utils from 'utils/utils';\nlet {connect} = require('react-redux');\nlet collectionActions = require('actions/collectionActions');\n\nclass Products extends React.Component {\n  constructor(){\n    super();\n\n    let state = {\n      selected: false\n    }\n  }\n\n  render() {\n    let {dispatch, collectionId, collections, activeCollection, showHeadline} = this.props;\n\n    let products;\n    let activeProductIndex;\n    let activeProduct;\n\n    if (collectionId){\n      let collection = utils.searchObjects(collectionId, 'key', collections.all);\n      products = collection.products;\n    }else{\n      products = shopifyAPI.getCurrentCollection()[1];\n      activeProductIndex = activeCollection.activeProduct.index;\n      activeProduct = products[activeProductIndex];\n    }\n\n    let handleProductChange = (index) => {\n      let updatedActiveProduct = {\n        index: index\n      }\n\n      this.setState({\n        selected: true\n      });\n\n      if (this.props.handleOptionChange){\n        this.props.handleOptionChange();\n      }\n\n      dispatch(collectionActions.changeActiveProduct(updatedActiveProduct));\n      dispatch(collectionActions.productIsSelected(true));\n\n      if (collectionId){\n        browserHistory.push(`/hat/${collectionId}`);\n      }\n    };\n\n    return (\n      <div className=\"products\">\n        <h4 className={`collection__subheadline ${this.props.error ? 'error' : ''} ${showHeadline ? '' : 'hide'}`}>Choose <span className=\"font-black\">HAT</span> color:</h4>\n\n        <div className=\"option-colors\">\n          {products.map((product, index) => {\n            let title = product.title.split(' - ').slice(-1)[0];\n            return (\n              <div data-tip={title} key={index} className={`option-color option-color__${title.replace(/\\s+/g, '-').replace('-/-', '_').toLowerCase()} ${(activeProductIndex == index) && collections.productIsSelected ? 'active' : ''}`} onClick={(event) => {\n                handleProductChange(index);\n              }}></div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      collections: state.collections,\n      activeCollection: state.collections.active\n    }\n  }\n)(Products);\n","import React from 'react';\nimport {Link} from 'react-router';\nimport Products from 'containers/Collection/Products';\nimport utils from 'utils/utils';\nlet {connect} = require('react-redux');\n\nclass CollectionItem extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    let {title, id, image, description, collections} = this.props;\n\n    let getProductPrice = () => {\n      let matchedCollection = utils.searchObjects(id, 'key', collections);\n      if (matchedCollection.products.length > 0){\n        return utils.formatAsMoney(matchedCollection.products[0].selectedVariant.price);\n      }\n    }\n\n    return (\n      <div className=\"collection-item\">\n        <div className=\"collection-item-inner\">\n          <Link to={`/hat/${id}`}><div className=\"collection-item-image\" style={{backgroundImage: 'url(' + image + ')'}}></div></Link>\n        </div>\n        <h3 className=\"collection-item-title\">{title}</h3>\n        <Products collectionId={id} />\n        <div className=\"price\">{getProductPrice()}</div>\n      </div>\n    )\n  }\n}\nexport default connect(\n  (state) => {\n    return {\n      collections: state.collections.all\n    }\n  }\n)(CollectionItem);\n","import React from 'react';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router';\nimport InstagramFeed from 'containers/InstagramFeed';\nimport Loader from 'presentational/Loader';\nimport CollectionItem from 'containers/CollectionItem';\n\nlet { connect } = require('react-redux');\nlet actions = require('actions/cartActions');\n\nclass Index extends React.Component {\n  constructor() {\n    super();\n  }\n\n  handleAddToCart(product) {\n    let { dispatch } = this.props;\n    if (product) {\n      dispatch(actions.startAddorUpdateCartItem(product.selectedVariant, 1));\n    }\n  }\n\n  render() {\n    let { collections } = this.props;\n    collections = collections.slice(0, 12);\n\n    if (collections.length > 0) {\n      return (\n        <div>\n          <div className=\"homepage-hero\">\n            <img src=\"/images/good-luck-good-cause.png\" />\n            <div className=\"subheader\">Customize your lucky Wishbone Hat. For every hat sold, $5 will go to a charity you choose.</div>\n            <Link to=\"/hats/\" className=\"button hollow\">View Hat Styles</Link>\n            <Link href=\"#hats\" className=\"arrow-down\"><i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i></Link>\n          </div>\n          <div id=\"hats\"></div>\n          <div className=\"container\">\n            <h3 className=\"hat-styles-header\">HAT STYLES</h3>\n            <h4 className=\"hat-styles-subheader\">(Choose a style then select your colors)</h4>\n            <div className=\"collections-grid\">\n              {collections.map(collection => {\n                return <CollectionItem\n                          key={collection.key}\n                          addToCart={() => this.handleAddToCart(collection)}\n                          id={collection.attrs.collection_id}\n                          image={collection.attrs.image.src}\n                          title={collection.attrs.title}\n                          description={collection.attrs.body_html}\n                        />\n              })}\n            </div>\n          </div>\n          <div className=\"homepage-hero-bottom\">\n          </div>\n\n          <h3 className=\"section-header\">News</h3>\n          <div className=\"news\">\n            <div id=\"news-item-wishbone\" className=\"news-item\">\n              <div className=\"news-item-inner\"><Link to=\"/news/226615620\"><div className=\"link-content\">Wishbone Hats</div></Link></div>\n            </div>\n            <div id=\"news-item-charities\" className=\"news-item\">\n              <div className=\"news-item-inner\"><Link to=\"/news/226615620\"><div className=\"link-content\">About the Charities</div></Link></div>\n            </div>\n          </div>\n          <InstagramFeed />\n        </div>\n      )\n    } else {\n      return (\n        <Loader />\n      )\n    }\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      collections: state.collections.all\n    }\n  }\n)(Index);\n","import React from 'react';\nimport Loader from 'presentational/Loader';\nimport CollectionItem from 'containers/CollectionItem';\nlet {connect} = require('react-redux');\nlet actions = require('actions/cartActions');\n\nclass Collections extends React.Component {\n  constructor() {\n    super();\n  }\n\n  handleAddToCart(product) {\n    let {dispatch} = this.props;\n    if (product){\n      dispatch(actions.startAddorUpdateCartItem(product.selectedVariant, 1));\n    }\n  }\n\n  render() {\n    let {collections} = this.props;\n\n    if (collections.length > 0) {\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"small-12 column\">\n              <div className=\"collections-grid\">\n                {collections.map(collection => {\n                  return <CollectionItem\n                            key={collection.key}\n                            addToCart={() => this.handleAddToCart()}\n                            id={collection.attrs.collection_id}\n                            image={collection.attrs.image.src}\n                            title={collection.attrs.title}\n                            description={collection.attrs.description}\n                          />\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }else{\n      return (\n        <Loader />\n      )\n    }\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      collections: state.collections.all\n    }\n  }\n)(Collections);\n","import React from 'react';\nimport {Link, IndexLink} from 'react-router';\nimport shopifyAPI from 'api/shopifyAPI';\nlet {connect} = require('react-redux');\nlet collectionActions = require('actions/collectionActions');\n\nclass Options extends React.Component {\n  constructor(){\n    super();\n  }\n\n  render() {\n    let {dispatch, activeCollection} = this.props;\n\n    let products = shopifyAPI.getCurrentCollection()[1];\n    let activeProductIndex = activeCollection.activeProduct.index;\n    let activeProduct = products[activeProductIndex];\n\n    let handleOptionChange = (optionName, value) => {\n      activeProduct.options.filter((option) => {\n        return option.name === optionName;\n      })[0].selected = value;\n\n      let updatedActiveProduct = {\n        index: activeProductIndex\n      }\n      this.props.handleOptionChange();\n      dispatch(collectionActions.changeActiveProduct(updatedActiveProduct));\n    };\n\n    return (\n      <div className=\"product-options\">\n        {activeProduct.options.map((option, index) => {\n          console.log('active product: ', activeProduct);\n          console.log('option name: ', option.name);\n          if (option.name != \"Title\" && option.name != \"Emblem\") {\n            console.log('selected o name: ', option.name);\n            return (\n              <select key={index} name={option.name} value={option.selected} onChange={(event) => {\n                handleOptionChange(option.name, event.target.value);\n              }}>\n                {option.values.map((value, index) => {\n                  return (\n                    <option key={index} value={value}>{value}</option>\n                  )\n                })}\n              </select>\n            )\n          }\n        })}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      activeCollection: state.collections.active\n    }\n  }\n)(Options);\n","import React from 'react';\nimport {Link, IndexLink} from 'react-router';\nimport shopifyAPI from 'api/shopifyAPI';\nlet {connect} = require('react-redux');\nlet collectionActions = require('actions/collectionActions');\n\nclass Emblems extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {\n      active: null\n    }\n  }\n\n  render() {\n    let {dispatch, activeCollection} = this.props;\n\n    let products = shopifyAPI.getCurrentCollection()[1];\n    let activeProductIndex = activeCollection.activeProduct.index;\n    let activeProduct = products[activeProductIndex];\n\n    let handleOptionChange = (optionName, value) => {\n      this.props.handleOptionChange(optionName, value);\n      this.setState({\n        active: value\n      });\n    };\n\n    return (\n      <div className=\"emblem-colors\">\n        <h4 className={`collection__subheadline ${this.props.error ? 'error' : ''}`}>Choose <span className=\"font-black\">WISHBONE</span> color: (3D puff embroidery)</h4>\n        {activeProduct.options.map((option, index) => {\n          if (option.name == \"Emblem\") {\n            return (\n              <div key={index} className=\"option-colors\">\n                {option.values.map((value, index) => {\n                  return (\n                    <div key={index} data-tip={value} className={`option-color option-color__${value.replace(/\\s+/g, '-').replace('-/-', '_').toLowerCase()} ${value == this.state.active ? 'active' : ''}`} onClick={(event) => {\n                      handleOptionChange(option.name, value);\n                    }}></div>\n                  )\n                })}\n              </div>\n            )\n          }\n        })}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      activeCollection: state.collections.active\n    }\n  }\n)(Emblems);\n","import React from 'react';\nimport {Link, IndexLink} from 'react-router';\nimport shopifyAPI from 'api/shopifyAPI';\nlet {connect} = require('react-redux');\nlet collectionActions = require('actions/collectionActions');\n\nclass Sizes extends React.Component {\n  constructor(){\n    super();\n  }\n\n  render() {\n    let {dispatch, activeCollection} = this.props;\n\n    let products = shopifyAPI.getCurrentCollection()[1];\n    let activeProductIndex = activeCollection.activeProduct.index;\n    let activeProduct = products[activeProductIndex];\n\n    let handleOptionChange = (optionName, value) => {\n    };\n\n    activeProduct.options.map((option, optionsIndex) => {\n      if (option.name == \"Size\") {\n        return (\n          <div className=\"product-sizes\">\n            <ul key={optionsIndex} className=\"product-sizes\">\n              {option.values.map((value, index) => {\n                return (\n                  <li\n                    key={index}\n                    className={`product-size ${option.selected === value ? 'selected' : ''}`}\n                    onClick={() => {\n                      this.handleOptionChange(option.name, value);\n                  }}>\n                    {value}\n                  </li>);\n              })}\n            </ul>\n          </div>\n        )\n      }\n    });\n    return <div></div>\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      activeCollection: state.collections.active\n    }\n  }\n)(Sizes);\n","import React from 'react';\nimport {Link, IndexLink} from 'react-router';\nimport shopifyAPI from 'api/shopifyAPI';\nimport ReactTooltip from 'react-tooltip'\nlet {connect} = require('react-redux');\nlet collectionActions = require('actions/collectionActions');\n\nclass Charity extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {\n      modalIsOpen: false,\n      charities: null\n    }\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal() {\n    this.setState({modalIsOpen: false});\n  }\n\n  openModal() {\n    this.setState({modalIsOpen: true});\n  }\n\n  componentWillMount(){\n    shopifyAPI.getCharities().then((charities) => {\n      this.setState({\n        charities: charities\n      });\n      console.log('Setting charities to state: ', charities);\n    });\n  }\n\n  render() {\n    let {dispatch, activeCollection, activeCharity} = this.props;\n    let charities = this.state.charities;\n\n    if (charities){\n      setTimeout(function(){\n        ReactTooltip.rebuild();\n      }, 20);\n      return (\n        <div className=\"charities-wrapper\">\n          <h4 className={`collection__subheadline ${this.props.error ? 'error' : ''}`}>Please select a charity. <small className=\"font-orange nobr\">- $5 will go to the charity you choose!</small></h4>\n          <div className=\"charities\">\n            {charities.map((charity) => {\n              let association = charity?.optionValues[0]?.value;\n              let description = charity?.optionValues[1]?.value;\n              return (\n                <div data-tip={description} className={`charity ${activeCharity ? activeCharity.id === charity.id ? 'active' : '' : ''}`} onClick={() => {\n                  this.props.handleOptionChange();\n                  dispatch(collectionActions.setCharity(charity));\n                }}>{association}</div>\n              )\n            })}\n          </div>\n        </div>\n      )\n    }else{\n      return (<div></div>)\n    }\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      activeCollection: state.collections.active,\n      activeCharity: state.collections.charity\n    }\n  }\n)(Charity);\n","import React from 'react';\nimport { Link } from 'react-router';\nimport { browserHistory } from 'react-router';\nimport utils from 'utils/utils';\nimport shopifyAPI from 'api/shopifyAPI';\nimport Loader from 'presentational/Loader';\nimport InstagramFeed from 'containers/InstagramFeed';\nimport ReactTooltip from 'react-tooltip';\nimport Collapsible from 'react-collapsible';\n\nimport Products from 'containers/Collection/Products';\nimport Options from 'containers/Collection/Options';\nimport Emblems from 'containers/Collection/Emblems';\nimport Sizes from 'containers/Collection/Sizes';\nimport Charity from 'containers/Collection/Charity';\nlet { connect } = require('react-redux');\nlet productActions = require('actions/productActions');\nlet collectionActions = require('actions/collectionActions');\nlet cartActions = require('actions/cartActions');\n\nclass Collection extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      dataFetched: false,\n      imageStatus: 'loading',\n      productSelected: false,\n      emblemSelected: false,\n      charitySelected: false,\n      showError: false\n    }\n\n    let dispatch;\n    let products = [];\n\n    this.handleProductChange = this.handleProductChange.bind(this);\n    this.handleEmblemChange = this.handleEmblemChange.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    this.handleCharityChange = this.handleCharityChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.dispatch = this.props.dispatch;\n    let collectionId = this.props.params.collectionId;\n    let activeProductIndex;\n\n    if (this.props.activeCollection) {\n      activeProductIndex = this.props.activeCollection.activeProduct.index;\n      this.setState({ productSelected: true });\n    } else {\n      activeProductIndex = 0;\n    }\n\n    shopifyAPI.activateCollection(collectionId, activeProductIndex).then((data) => {\n      let collection = data[0];\n      this.dispatch(collectionActions.setActiveCollection(collection));\n      this.setState({\n        dataFetched: true\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.dispatch(collectionActions.productIsSelected(false));\n    this.dispatch(collectionActions.clearActiveCollection());\n  }\n\n  handleProductChange() {\n    this.setState({\n      imageStatus: 'loading',\n      productSelected: true\n    });\n\n    // keep the emblem as the selected when selecting new product\n    if (this.state.emblemSelected) {\n      this.handleEmblemChange('Emblem', this.state.emblemSelected);\n    }\n  }\n\n  handleOptionChange() {\n    this.setState({\n      optionSelected: true\n    });\n\n    // keep the emblem as the selected when selecting new product\n    if (this.state.emblemSelected) {\n      this.handleEmblemChange('Emblem', this.state.emblemSelected);\n    }\n  }\n\n  handleEmblemChange(optionName, value) {\n    let products = shopifyAPI.getCurrentCollection()[1];\n    let activeProductIndex = this.props.activeCollection.activeProduct.index;\n    let activeProduct = products[activeProductIndex];\n\n    this.setState({\n      imageStatus: 'loading',\n      emblemSelected: value\n    });\n\n    // persist the emblem change\n    shopifyAPI.changeProduct(value);\n\n    // update active product index\n    let updatedActiveProduct = {\n      index: activeProductIndex\n    }\n    this.dispatch(collectionActions.changeActiveProduct(updatedActiveProduct));\n  }\n\n  handleCharityChange() {\n    this.setState({\n      charitySelected: true\n    });\n  }\n\n  handleImageLoaded() {\n    this.setState({ imageStatus: 'loaded' });\n  }\n\n  handleImageErrored() {\n    this.setState({ imageStatus: 'failed to load' });\n  }\n\n  render() {\n    let { dispatch, activeCollection } = this.props;\n\n    if (this.state.dataFetched) {\n      let products = shopifyAPI.getCurrentCollection()[1];\n      let activeProductIndex = activeCollection.activeProduct.index;\n      let activeProduct = products[activeProductIndex];\n\n      let { collection_id, body_html, title, image } = activeCollection;\n      let { selectedVariant, selectedVariantImage } = activeProduct;\n\n      let renderDescription = () => {\n        if (body_html) {\n          return (\n            <div className=\"description\">\n              <h5 className=\"collection__subheadline show-for-medium\">Description</h5>\n              <div dangerouslySetInnerHTML={{__html: body_html}}></div>\n            </div>\n          )\n        }\n      }\n\n      return (\n        <div>\n          <div className=\"container\">\n            <h1 className=\"collection-title hide-for-medium\">{title}</h1>\n            <div className=\"hide-for-medium\">\n              <div className=\"accordion\">\n                <Collapsible trigger=\"Description\" transitionTime={200}>\n                  {renderDescription()}\n                </Collapsible>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"small-12 medium-7 column\">\n                <div className=\"active-product-image\">\n                  <img\n                    src={selectedVariantImage.variants[7].src}\n                    onLoad={this.handleImageLoaded.bind(this)}\n                    onError={this.handleImageErrored.bind(this)}\n                    />\n                  {this.state.imageStatus === 'loading' ? <Loader /> : '' }\n                </div>\n              </div>\n              <div className=\"small-12 medium-5 column\">\n                <h1 className=\"collection-title show-for-medium\">{title}</h1>\n                <div className=\"collection-info\">\n                  <div className=\"show-for-medium\">{renderDescription()}</div>\n\n                  <Products error={this.state.showError && !this.state.productSelected} handleOptionChange={this.handleProductChange} showHeadline={true} />\n\n                  <Emblems error={this.state.showError && !this.state.emblemSelected} handleOptionChange={this.handleEmblemChange} />\n\n                  <Options handleOptionChange={this.handleOptionChange} />\n\n                  <Sizes />\n\n                  <Charity error={this.state.showError && !this.state.charitySelected} handleOptionChange={this.handleCharityChange} />\n\n                  <div className=\"product-price\">{utils.formatAsMoney(selectedVariant.price)}</div>\n\n                  <div className=\"add-to-cart-wrapper\">\n                    <button\n                      onClick={()=>{\n                        if (this.state.productSelected && this.state.emblemSelected && this.state.charitySelected){\n                          dispatch(cartActions.startAddorUpdateCartItem(activeProduct.selectedVariant, 1));\n                        }else{\n                          this.setState({\n                            showError: true\n                          });\n                        }\n                      }}\n                      className=\"button large add-to-cart\">Add To Cart</button>\n                    </div>\n                    <div className={`error-msg ${this.state.showError && (!this.state.productSelected || !this.state.emblemSelected || !this.state.charitySelected) ? 'active' : ''}`}>Please make selections above to continue.</div>\n                    <ul className=\"payment-method-icons\">\n                      <li><i className=\"fa fa-cc-visa\"></i></li>\n                      <li><i className=\"fa fa-cc-mastercard\"></i></li>\n                      <li><i className=\"fa fa-cc-discover\"></i></li>\n                      <li><i className=\"fa fa-cc-amex\"></i></li>\n                      <li><i className=\"fa fa-cc-paypal\"></i></li>\n                    </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n          <InstagramFeed />\n          <ReactTooltip multiline={true} className=\"tooltip\" />\n        </div>\n      )\n    } else {\n      return (\n        <Loader />\n      )\n    }\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      activeCollection: state.collections.active\n    }\n  }\n)(Collection);\n","import React from 'react';\nimport DocumentMeta from 'react-document-meta';\n\nexport default class Login extends React.Component{\n  constructor(){\n    super();\n  }\n\n  render() {\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1>Login</h1>\n          <form>\n            <input type=\"text\" placeholder=\"Email\" />\n            <input type=\"password\" placeholder=\"Password\" />\n            <input type=\"submit\" className=\"button\" value=\"Login\" />\n          </form>\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react';\nimport Loader from 'presentational/Loader';\nimport axios from 'axios';\nlet {connect} = require('react-redux');\nlet actions = require('actions/cartActions');\n\nexport default class NewsItem extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: null\n    }\n  }\n\n  componentWillMount(){\n    axios.get('/shopify/get-news-item', {\n      params: {\n        blog_id: '91669572',\n        post_id: this.props.params.postId\n      }\n    })\n    .then((response) => {\n      console.log('got news data from api', response.data);\n      this.setState({\n        data: response.data\n      });\n    })\n    .catch(error => console.log('Error: ', error));\n  }\n\n  render() {\n    let {data} = this.state;\n\n    if (data){\n      function createMarkup(){\n         return {__html: data.body_html};\n      }\n\n      return (\n        <div className=\"container page\">\n          <h1>{data.title}</h1>\n          <div className=\"body\" dangerouslySetInnerHTML={createMarkup()}>\n          </div>\n        </div>\n      )\n    }else{\n      return (\n        <Loader />\n      )\n    }\n  }\n}\n","import React from 'react';\nimport shopifyAPI from 'api/shopifyAPI';\nimport Loader from 'presentational/Loader';\nlet { connect } = require('react-redux');\n\nexport default class PageItem extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: null\n    }\n  }\n\n  setPageContent(props) {\n    let path = props.location.pathname.slice(1);\n\n    this.setState({\n      data: shopifyAPI.getPage(props.location.pathname.slice(1))\n    });\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setPageContent(newProps);\n  }\n\n  componentWillMount() {\n    // fetch pages from shopify\n    shopifyAPI.fetchPageContent().then(() => {\n      // set content\n      this.setPageContent(this.props);\n    });\n  }\n\n  render() {\n    let { data } = this.state;\n\n    if (data) {\n      function createMarkup() {\n        return { __html: data.body_html };\n      }\n\n      return (\n        <div className=\"container page\">\n          <h1>{data.title}</h1>\n          <div className=\"body\" dangerouslySetInnerHTML={createMarkup()}></div>\n        </div>\n      )\n    } else {\n      return (\n        <Loader />\n      )\n    }\n  }\n}\n","import React from 'react';\nimport {Route, Router, IndexRoute, browserHistory} from 'react-router';\n\nimport Main from 'containers/Main';\nimport Index from 'containers/Index';\nimport Collections from 'containers/Collections';\nimport Collection from 'containers/Collection/Index';\nimport Login from 'presentational/Login';\nimport NewsItem from 'containers/NewsItem';\nimport PageItem from 'containers/PageItem';\n\nimport ReactGA from 'react-ga';\n// ReactGA.initialize('UA-6241825-9'); // initialize Google Analytics\n\nlet {connect} = require('react-redux');\nlet store = require('store/configureStore').configure();\n\nfunction logPageView(location) {\n  ReactGA.set({ page: location.pathname });\n  ReactGA.pageview(location.pathname);\n}\n\nbrowserHistory.listen((location) => {\n  logPageView(location);\n\n  // scroll to top when changing page\n  window.scrollTo(0, 0);\n});\n\nexport default (\n  <Router history={browserHistory}>\n    <Route path=\"/\" component={Main}>\n      <IndexRoute path=\"/\" component={Index} />\n      <Route path=\"hats\" component={Collections} />\n      <Route path=\"hat/:collectionId\" component={Collection} />\n      <Route path=\"login\" component={Login} />\n      <Route path=\"about\" component={PageItem} />\n      <Route path=\"contact\" component={PageItem} />\n      <Route path=\"news/:postId\" component={NewsItem} />\n    </Route>\n  </Router>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport router from './router/router.jsx';\nimport shopifyAPI from 'api/shopifyAPI';\nimport fonts from './fonts/fonts.css';\nimport { startAddCollections } from 'actions/collectionActions';\nimport 'styles/app.scss';\n\nlet productActions = require('actions/productActions');\nlet store = require('store/configureStore').configure();\n\n// subscribe to the redux store\nstore.subscribe(() => {\n  let state = store.getState();\n});\n\n// add products and collections to store\nstore.dispatch(productActions.startAddProducts());\nstore.dispatch(startAddCollections());\n\n// fetch content\nconsole.log('fetch opage')\nshopifyAPI.fetchPageContent();\n\n// create shopify cart instance based on last session (based on localStorage)\nshopifyAPI.createCart().then((localCart) => {\n  store.dispatch({ type: 'SET_INITIAL_CART_STATE', localCart });\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    {router}\n  </Provider>,\n  document.getElementById('app')\n);\n","// format amount as currency\nfunction formatAsMoney(amount, currency, thousandSeparator, decimalSeparator, localeDecimalSeparator) {\n  currency = currency || '$';\n  thousandSeparator = thousandSeparator || ',';\n  decimalSeparator = decimalSeparator || '.';\n  localeDecimalSeparator = localeDecimalSeparator || '.';\n  var regex = new RegExp('(\\\\d)(?=(\\\\d{3})+\\\\.)', 'g');\n\n  return currency + parseFloat(amount, 10).toFixed(2)\n    .replace(localeDecimalSeparator, decimalSeparator)\n    .replace(regex, '$1' + thousandSeparator)\n    .toString();\n}\nmodule.exports.formatAsMoney = formatAsMoney;\n\n\nfunction searchObjects(nameKey, prop, arr){\n  for (var i=0; i < arr.length; i++) {\n    if (arr[i][prop] === nameKey) {\n      return arr[i];\n    }\n  }\n}\nmodule.exports.searchObjects = searchObjects;\n","import shopifyAPI from 'api/shopifyAPI';\n\nexport var setActiveCollection = (collection) => {\n  return {\n    type: 'SET_ACTIVE_COLLECTION',\n    collection\n  };\n};\n\n// Add collections to store\nexport var startAddCollections = () => {\n  return (dispatch) => {\n    return new Promise(function(resolve, reject){\n      shopifyAPI.buyClient.fetchAllCollections().then((data) => {\n        var collections = data || {};\n        var parsedCollections = [];\n\n        let parseCollectionsPromises = collections.map((collection) => {\n          let collectionId = collection.attrs.collection_id;\n          return new Promise(function(resolve, reject){\n            let products = [];\n            shopifyAPI.buyClient.fetchQueryProducts({collection_id: collectionId, sort_by: 'collection-default'}).then(data => {\n              products = data || [];\n\n              parsedCollections.push({\n                key: collectionId,\n                products: products,\n                ...collection\n              });\n\n              resolve();\n            });\n          });\n        });\n\n\n        Promise.all(parseCollectionsPromises).then(() => {\n\n          // sort the collections alphabetically\n          parsedCollections.sort(function(a, b){\n            var keyA = a.attrs.title,\n                keyB = b.attrs.title;\n            // Compare the 2\n            if(keyA < keyB) return -1;\n            if(keyA > keyB) return 1;\n            return 0;\n          });\n\n          dispatch(addCollections(parsedCollections));\n          resolve();\n        });\n      });\n    });\n  };\n};\n\nexport var addCollections = (collections) => {\n  return {\n    type: 'ADD_COLLECTIONS',\n    collections\n  };\n};\n\nexport var changeActiveProduct = (updatedActiveProduct) => {\n  return {\n    type: 'CHANGE_ACTIVE_PRODUCT',\n    updatedActiveProduct\n  };\n};\n\nexport var productIsSelected = (isSelected) => {\n  return {\n    type: 'PRODUCT_IS_SELECTED',\n    isSelected\n  };\n};\n\nexport var setCharity = (charity) => {\n  return {\n    type: 'SET_CHARITY',\n    charity\n  };\n};\n\nexport var clearActiveCollection = () => {\n  return {\n    type: 'CLEAR_ACTIVE_COLLECTION'\n  };\n};\n","import shopifyAPI from 'api/shopifyAPI';\n\nexport var startAddorUpdateCartItem = (productVariant, quantity) => {\n  return (dispatch, getState) => {\n    let cart = getState().cart;\n    let variantId;\n\n    // assign variant id based on is product or cart line item\n    if (productVariant.variant_id) {\n      variantId = productVariant.variant_id;\n    } else {\n      variantId = productVariant.id;\n    }\n\n    let cartLineItem = findCartItemByVariantId(variantId);\n\n    // function to check if product variant already exists in cart\n    function findCartItemByVariantId(variantId) {\n      return cart.lineItems.filter((item) => {\n        // console.log('item.variant_id: ', item.variant_id);\n        // console.log('variantId: ', variantId);\n        return (item.variant_id === variantId);\n      })[0];\n    }\n\n    if (cartLineItem) {\n      dispatch(updateCartItem(cartLineItem, parseInt(quantity)));\n    } else {\n      dispatch(addToCart(productVariant, quantity));\n    }\n\n    // update the cart subtotal\n    dispatch(updateCartSubtotal());\n\n    //  update the cart items count\n    dispatch(updateCartItemsCount(quantity));\n\n    // add active charity if not already in cart\n    let collections = getState().collections;\n    let selectedCharity = collections.charity;\n    if (selectedCharity) {\n      console.log('cart', cart);\n      let charityIsInCart = findCartItemByVariantId(selectedCharity.variant_id);\n      if (!charityIsInCart) {\n        dispatch(clearCharitiesFromCart());\n        dispatch(addToCart(selectedCharity, 1));\n      }\n    }\n  }\n};\n\n// clear charities from cart\nexport var clearCharitiesFromCart = () => {\n  return (dispatch, getState) => {\n    let cart = getState().cart;\n\n    let charitiesInCart = cart.lineItems.filter((item) => {\n      console.log('item.title', item.title);\n      return (item.title === 'Charity');\n    });\n\n    console.log('charities in cart', charitiesInCart);\n    if (charitiesInCart.length > 0) {\n      charitiesInCart.map((charity) => {\n        dispatch(updateCartItem(charity, 0, true));\n      });\n    }\n    dispatch({ type: 'SET_CHARITY', undefined });\n  }\n};\n\n// add product to cart\nexport var addToCart = (productVariant, quantity) => {\n  return (dispatch, getState) => {\n    shopifyAPI.cart.createLineItemsFromVariants({ variant: productVariant, quantity: quantity }).then(function(updatedCart) {\n      let updatedCartItems = updatedCart.lineItems;\n      dispatch({ type: 'UPDATE_CART_ITEMS', updatedCartItems });\n      dispatch(openCart());\n    }).catch(function(errors) {\n      console.log('Failed to addToCart', errors);\n    });\n  }\n};\n\n// empty cart\nexport var emptyCart = () => {\n  return (dispatch, getState) => {\n    dispatch({ type: 'CLEAR_CART_ITEMS' });\n    dispatch(closeCart());\n  }\n};\n\n// clear cart\nexport var clearCart = () => {\n return (dispatch, getState) => {\n\n  shopifyAPI.cart.clearLineItems()\n    .then(function (updatedCart) {\n      let updatedCartItems = updatedCart.lineItems;\n      dispatch({ type: 'UPDATE_CART_ITEMS', updatedCartItems });\n      dispatch(updateCartSubtotal());\n    })\n    .catch(function(errors) {\n      console.log('coundnt remove items: ', errors);\n    })\n  }\n}\n\n// update cart subtotal\nexport var updateCartSubtotal = () => {\n  return (dispatch, getState) => {\n    let newSubtotal = shopifyAPI.cart.subtotal;\n    dispatch({ type: 'UPDATE_CART_SUBTOTAL', newSubtotal });\n  }\n};\n\n// update cart items count\nexport var updateCartItemsCount = (quantity) => {\n  return (dispatch, getState) => {\n    let cart = getState().cart;\n    let updatedCartItemsCount = parseInt(cart.lineItemsCount) + parseInt(quantity);\n    dispatch({ type: 'UPDATE_CART_ITEMS_COUNT', updatedCartItemsCount });\n\n    if (parseInt(updatedCartItemsCount) < 1) {\n      dispatch(closeCart());\n    } else {\n      dispatch(openCart());\n    }\n  }\n};\n\n// update a cart item\nexport var updateCartItem = (selectedCartItem, quantity, remove) => {\n  return (dispatch, getState) => {\n    let cart = getState().cart;\n\n    let updatedQuantity;\n    if (remove) {\n      updatedQuantity = 0;\n    } else {\n      updatedQuantity = selectedCartItem.quantity + quantity;\n    }\n\n    let updatedCartItems = [];\n\n    // if the new quantity is more than 0, keep it in the new array\n    cart.lineItems.forEach((cartItem) => {\n      if (selectedCartItem.id === cartItem.id) {\n        if (updatedQuantity > 0) {\n          let updatedCartItem = [];\n\n          // clone the line item\n          updatedCartItem = cartItem;\n\n          // update the quantity of the new clone\n          updatedCartItem.quantity = updatedQuantity;\n\n          // return the updated cart item\n          updatedCartItems.push(updatedCartItem);\n        }\n      } else {\n        // return the unmodified item\n        updatedCartItems.push(cartItem);\n      }\n    });\n\n    // update the shopify cart api singleton\n    shopifyAPI.cart.updateLineItem(selectedCartItem.id, updatedQuantity).then(() => {\n      // update the local cart items (in redux store)\n      dispatch({ type: 'UPDATE_CART_ITEMS', updatedCartItems });\n    });\n  }\n};\n\n// open cart\nexport var openCart = () => {\n  return {\n    type: 'OPEN_CART'\n  }\n};\n\n// close cart\nexport var closeCart = () => {\n  return {\n    type: 'CLOSE_CART'\n  }\n};\n","export var productsReducer = (state = { all: [], active: null }, action) => {\n  switch (action.type) {\n    case 'ADD_PRODUCTS':\n      return {\n        ...state,\n        all: action.products\n      };\n    case 'SET_ACTIVE_PRODUCT':\n      return {\n        ...state,\n        active: {\n          ...state.active,\n          fetched: true,\n          options: action.options\n        }\n      };\n    case 'CLEAR_ACTIVE_PRODUCT':\n      return {\n        ...state,\n        active: null\n      };\n    case 'UPDATE_ACTIVE_PRODUCT_OPTIONS':\n      return {\n        ...state,\n        active: {\n          ...state.active,\n          options: action.options\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport var collectionsReducer = (state = { all: [], active: null, charity: null, productIsSelected: false }, action) => {\n  switch (action.type) {\n    case 'ADD_COLLECTIONS':\n      return {\n        ...state,\n        all: action.collections\n      };\n    case 'SET_ACTIVE_COLLECTION':\n      return {\n        ...state,\n        active: action.collection\n      };\n    case 'CHANGE_ACTIVE_PRODUCT':\n      return {\n        ...state,\n        active: {\n          ...state.active,\n          activeProduct: action.updatedActiveProduct\n        }\n      };\n    case 'PRODUCT_IS_SELECTED':\n      return {\n        ...state,\n        productIsSelected: action.isSelected\n      };\n    case 'SET_CHARITY':\n      return {\n        ...state,\n        charity: action.charity\n      };\n    case 'CLEAR_ACTIVE_COLLECTION':\n      return {\n        ...state,\n        active: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport var cartReducer = (state = { isOpen: false, lineItems: [] }, action) => {\n  switch (action.type) {\n    // case 'RESTORE_PREVIOUS_CART':\n    //   return action.remoteCart;\n    case 'SET_INITIAL_CART_STATE':\n      return {\n        ...action.localCart\n      };\n    case 'UPDATE_CART_ITEMS':\n      return {\n        ...state,\n        lineItems: action.updatedCartItems\n      };\n    case 'UPDATE_CART_ITEMS_COUNT':\n      return {\n        ...state,\n        lineItemsCount: action.updatedCartItemsCount\n      };\n    case 'UPDATE_CART_SUBTOTAL':\n      return {\n        ...state,\n        subtotal: action.newSubtotal\n      };\n    case 'OPEN_CART':\n      return {\n        ...state,\n        isOpen: true\n      };\n    case 'CLOSE_CART':\n      return {\n        ...state,\n        isOpen: false\n      };\n    case 'CLEAR_CART_ITEMS':\n      return {\n        ...state,\n        lineItems: []\n      };\n    default:\n      return state;\n  }\n};\n\nexport var navReducer = (state = { showClose: false, showNav: false }, action) => {\n  switch (action.type) {\n    case 'TOGGLE_NAV_ICON':\n      return {\n        ...state,\n        showClose: !state.showClose,\n        showNav: state.showNav\n      };\n    case 'TOGGLE_NAV':\n      return {\n        ...state,\n        showClose: !state.showClose,\n        showNav: !state.showNav\n      };\n    case 'CLOSE_NAV':\n      return {\n        ...state,\n        showClose: false,\n        showNav: false\n      };\n    default:\n      return state;\n  }\n};\n","import * as redux from 'redux';\nimport thunk from 'redux-thunk';\n\nimport {productsReducer, collectionsReducer, cartReducer, navReducer} from 'reducers/reducers';\n\nexport let configure = (initialState = {}) => {\n  var reducer = redux.combineReducers({\n    products: productsReducer,\n    collections: collectionsReducer,\n    cart: cartReducer,\n    nav: navReducer\n  });\n\n  var store = redux.createStore(reducer, initialState, redux.compose(\n    redux.applyMiddleware(thunk),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n  ));\n\n  return store;\n};\n","import shopifyAPI from 'api/shopifyAPI';\n\n// Add products to store\nexport var startAddProducts = () => {\n  return (dispatch) => {\n    return shopifyAPI.buyClient.fetchAllProducts().then((data) => {\n      let products = data || {};\n      let parsedProducts = products.map((product, index) => {\n        let updatedProduct = [];\n        updatedProduct = product;\n        updatedProduct.key = index;\n        return updatedProduct;\n      });\n\n      dispatch(addProducts(parsedProducts));\n      dispatch(preloadProductImages());\n    });\n  };\n};\n\nexport var addProducts = (products) => {\n  return {\n    type: 'ADD_PRODUCTS',\n    products\n  };\n};\n\nexport var preloadProductImages = () => {\n  return (dispatch, getState) => {\n    let products = getState().products.all;\n    let images = [];\n    products.map((product, index) => {\n      images[index] = new Image();\n      images[index].src = product.selectedVariant.imageVariants[4].src;\n      return images[index];\n    });\n  };\n};\n\n\n// set active product\nexport var setActiveProduct = (options) => {\n  return {\n    type: 'SET_ACTIVE_PRODUCT',\n    options\n  };\n};\n\n// clear active product from redux\nexport var clearActiveProduct = () => {\n  return {\n    type: 'CLEAR_ACTIVE_PRODUCT'\n  };\n};\n\n// update active product option\nexport var updateActiveProductOptions = (options) => {\n  return {\n    type: 'UPDATE_ACTIVE_PRODUCT_OPTIONS',\n    options\n  };\n};\n","import axios from 'axios';\nlet React = require('react');\nlet ShopifyBuy = require('shopify-buy');\nlet store = require('store/configureStore').configure();\n\nclass shopifyAPI {\n  constructor() {\n    this.buyClient = ShopifyBuy.buildClient({\n      apiKey: '5bdd1cfb6d32ad4160261643dda11f1c',\n      domain: 'wishbone-hats.myshopify.com',\n      appId: 6\n    });\n\n    this.cart = {};\n    this.collection = {};\n    this.products = [];\n    this.pages = [];\n  }\n\n  fetchPageContent(){\n    return axios.get('http://localhost:3000/shopify/get-pages').then((response) => {\n        console.log('resp', response)\n      this.pages = response.data;\n    })\n    .catch(error => console.log('Error: ', error));\n  }\n\n  getPage(pageName){\n    let matchedPage = [];\n    console.log('pages: ', this.pages);\n    this.pages.map((page) => {\n      let handle = page.handle;\n      if (handle === pageName){\n        matchedPage.push(page);\n      }\n    });\n    return matchedPage[0];\n  }\n\n  activateCollection(collectionId, activeProductIndex){\n    let fetchCollectionPromise = new Promise((resolve, reject) => {\n      this.buyClient.fetchCollection(collectionId).then((data) => {\n        let collection = data.attrs || {};\n        let parsedCollection = {\n          ...collection,\n          activeProduct: {\n            index: activeProductIndex\n          }\n        };\n        this.collection = parsedCollection;\n        resolve(parsedCollection);\n      });\n    });\n\n    let fetchProductsPromise = new Promise((resolve, reject) => {\n      this.buyClient.fetchQueryProducts({collection_id: collectionId, sort_by: 'collection-default'}).then(data => {\n        let products = data || [];\n        this.products = products;\n        resolve(products);\n      });\n    });\n\n    return Promise.all([fetchCollectionPromise, fetchProductsPromise]).then(values => {\n      return values;\n    }, reason => {\n      return reason;\n    });\n  }\n\n  changeProduct(value){\n    this.products.map((product) => {\n      product.options.filter((option) => {\n        return option.name === 'Emblem';\n      })[0].selected = value;\n    });\n  }\n\n  getCurrentCollection(collectionId){\n    return [this.collection, this.products];\n  }\n\n  getCharities(){\n    return new Promise((resolve, reject) => {\n      this.buyClient.fetchQueryProducts({tag: ['Charity']}).then(data => {\n        let charities = data[0].variants || [];\n        console.log('got charities data: ', data);\n        resolve(charities);\n      });\n    });\n  }\n\n  createCart() {\n    return new Promise((resolve, reject) => {\n      this.buyClient.createCart().then((newCart) => {\n        localStorage.setItem('lastCartId', newCart.id);\n        // console.log('created new cart', newCart);\n        // set singleton cart object to reference shopify cart\n        this.cart = newCart;\n\n        // set localCart (redux connected) to keep track of state changes\n        let localCart = {\n          isOpen: false,\n          lineItemsCount: 0,\n          lineItems: [],\n          subtotal: 0\n        }\n        resolve(localCart);\n      });\n    });\n  }\n\n  restoreCart() {\n    return new Promise((resolve, reject) => {\n      this.buyClient.fetchCart(localStorage.getItem('lastCartId')).then((remoteCart) => {\n        // set singleton cart object to reference shopify cart\n        this.cart = remoteCart;\n\n        // set localCart (redux connected) to keep track of state changes\n        let localCart = {\n          isOpen: false,\n          lineItemsCount: remoteCart.lineItemCount,\n          lineItems: remoteCart.lineItems,\n          subtotal: remoteCart.subtotal\n        }\n        resolve(localCart);\n      });\n    });\n  }\n}\n\nexport default (new shopifyAPI());\n"],"sourceRoot":""}